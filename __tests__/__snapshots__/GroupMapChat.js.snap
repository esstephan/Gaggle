exports[`test renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}>
  <View>
    <View
      hasTabs={true}
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": null,
          "elevation": 0,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "shadowColor": null,
          "shadowOffset": null,
          "shadowOpacity": null,
          "shadowRadius": null,
          "top": 0,
        }
      }
      virtual={undefined} />
  </View>
  <RCTScrollView>
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
            },
            undefined,
          ]
        }>
        <View
          style={
            Object {
              "borderBottomWidth": 0.5,
              "borderColor": "#a7a6ab",
              "elevation": 3,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "space-around",
            }
          }
          virtual={undefined}>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}>
            <View
              active={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F8F8F8",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              virtual={undefined}>
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#007aff",
                      "fontSize": 26,
                    },
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
                virtual={undefined}>
                
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#007aff",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": "600",
                    "marginLeft": 7,
                    "marginRight": 7,
                  }
                }
                virtual={undefined}>
                Map
              </Text>
            </View>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}>
            <View
              active={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F8F8F8",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              virtual={undefined}>
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#6b6b6b",
                      "fontSize": 26,
                    },
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
                virtual={undefined}>
                
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#6b6b6b",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "marginLeft": 7,
                    "marginRight": 7,
                  }
                }
                virtual={undefined}>
                Chat
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#007aff",
                "bottom": 0,
                "height": 4,
                "left": 0,
                "position": "absolute",
                "width": 375,
              }
            } />
        </View>
        <RCTScrollView>
          <View>
            <View
              style={
                Object {
                  "width": 750,
                }
              }>
              <View
                heading={
                  <Styled(TabHeadingNB)
                    virtual={undefined}>
                    <Styled(Icon)
                      name="compass"
                      virtual={undefined} />
                    <Styled(Text)
                      virtual={undefined}>
                      Map
                    </Styled(Text)>
                  </Styled(TabHeadingNB)>
                }
                style={
                  Object {
                    "backgroundColor": "#FFF",
                    "flex": 1,
                  }
                }
                virtual={undefined}>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    }
                  }
                  virtual={undefined}>
                  Map goes here
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 750,
                }
              }>
              <View
                heading={
                  <Styled(TabHeadingNB)
                    virtual={undefined}>
                    <Styled(Icon)
                      name="chatboxes"
                      virtual={undefined} />
                    <Styled(Text)
                      virtual={undefined}>
                      Chat
                    </Styled(Text)>
                  </Styled(TabHeadingNB)>
                } />
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
